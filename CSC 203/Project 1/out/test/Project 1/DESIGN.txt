getCurrentImage
- I left this method in Functions. I was debating moving it to WorldModel or WorldView, but because it is used in both
of those classes I deicded to keep it in Functions. IT also only takes an object 'Object' as the parameter, meaning it
is a more general use type of method.

execute*Activity
- I moved all of these to the Entity class. Although it could also go inside WorldModel, this method is something that
does not use the other entities in the world model. It only impacts the one entity that has been passed in. That entity
will be passed back into the given WorldModel, but again, it won't disturb anything else in the WorldModel, making it
an Entity-focused method.

moveEntity
- I elected to move this to the WorldModel class instead of Entity, because it uses private instance methods of WorldModel

setBackgroundCell
- I moved these methods to WorldModel instead of Background, because it will take a background that must be passed back into the WorldModel



setBackground
- I moved this to WorldModel instead of Background, because the background is apart of the WorldModel. Since it must be
changed after the compiler goes inside the current world, it should be a method within WorldModel

addEntity
- I added this to WorldModel instead of the Entity class because the method will check the bounds and occupancy of
certain cells in the world, instead of just a singular entity

transformNotFull, transfromFull, transformPlant, transformTree
- I added these methods to WorldModel instead of Entity, because while it uses and creates Entity instances, it checkes
the world at the given point, and adds there, wich makes it a WorldModel method

createAnimationAction, createActivityAction
- I moved these to Entity, because it will create an animationAction or activityAction on an entity that the entity will
 use when passed back into the World


transformPlant, transformTree, transformSapling
- I put these in WorldModel instead of Entity or Action, because transformPlants calls trasnformTree, which calls the
removeEntity method that is in WorldModel

createActivityAction
- Although this doesn't take an EventSchedule, it is only used in or with calling the EventSchedule

getNumFromRange, adjacent
- I added these to Entity, because although they don't take any Entity Objects, they are only called in the Entity Class,
so they have been made private static

findNearest
- I moved this to worldModel, because although it doesn't exactly work on the World, it will take a world and look
inside it. Inside the world we can find the entity and the entity "nearest", as the method calls requires

clamp
- I moved this methdo to WorldView because it is only used twice and within that class. It is now a private method