<mxfile host="drawio-plugin" modified="2022-11-30T00:02:39.122Z" agent="5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.102 Safari/537.36" etag="TaZwA8BkgFWAQHXcblB1" version="15.5.4" type="embed"><diagram id="b-Ntksw2YhtkPyTTXFDB" name="Page-1"><mxGraphModel dx="1176" dy="883" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="0" pageScale="1" pageWidth="850" pageHeight="1100" background="none" math="0" shadow="0"><root><mxCell id="0"/><mxCell id="1" parent="0"/><mxCell id="node18" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Action&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Action(WorldModel, ImageStore): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- world: WorldModel&lt;br/&gt;- imageStore: ImageStore&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getWorldModel(): WorldModel&lt;br/&gt;+ getImageStore(): ImageStore&lt;br/&gt;+ executeAction(EventScheduler): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1"><mxGeometry x="1183" y="1254" width="271" height="167" as="geometry"/></mxCell><mxCell id="node11" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ActionEntity&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ActionEntity(String, Point, List&amp;lt;PImage&amp;gt;, int, int, int, int, int, int): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;~ resourceLimit: int&lt;br/&gt;~ healthLimit: int&lt;br/&gt;~ resourceCount: int&lt;br/&gt;~ actionPeriod: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getHealth(): int&lt;br/&gt;+ executeActivity(WorldModel, ImageStore, EventScheduler): void&lt;br/&gt;+ scheduleActions(EventScheduler, WorldModel, ImageStore): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1"><mxGeometry x="3118" y="1566" width="441" height="211" as="geometry"/></mxCell><mxCell id="node9" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ActivityAction&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ActivityAction(ActionEntity, WorldModel, ImageStore): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- actionEntity: ActionEntity&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ executeAction(EventScheduler): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1"><mxGeometry x="1517" y="1309" width="376" height="109" as="geometry"/></mxCell><mxCell id="node0" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;AnimationAction&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ AnimationAction(Entity, WorldModel, ImageStore, int): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- repeatCount: int&lt;br/&gt;- entity: Entity&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ executeAction(EventScheduler): void&lt;br/&gt;+ getRepeatCount(): int&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1"><mxGeometry x="834" y="933" width="376" height="145" as="geometry"/></mxCell><mxCell id="node26" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Background&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Background(String, List&amp;lt;PImage&amp;gt;): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ BGND_KEY: String&lt;br/&gt;+ BGND_COL: int&lt;br/&gt;+ BGND_ROW: int&lt;br/&gt;- id: String&lt;br/&gt;+ BGND_ID: int&lt;br/&gt;- imageIndex: int&lt;br/&gt;- images: List&amp;lt;PImage&amp;gt;&lt;br/&gt;+ BGND_NUM_PROPERTIES: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getImageIndex(): int&lt;br/&gt;+ getID(): String&lt;br/&gt;+ getCurrentImage(): PImage&lt;br/&gt;+ getImages(): List&amp;lt;PImage&amp;gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1"><mxGeometry x="2403" y="1155" width="257" height="365" as="geometry"/></mxCell><mxCell id="node27" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;DudeEntity&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ DudeEntity(String, Point, List&amp;lt;PImage&amp;gt;, int, int, int, int, int, int): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ DUDE_ID: int&lt;br/&gt;+ DUDE_ACTION_PERIOD: int&lt;br/&gt;+ DUDE_ROW: int&lt;br/&gt;+ DUDE_LIMIT: int&lt;br/&gt;+ DUDE_NUM_PROPERTIES: int&lt;br/&gt;+ DUDE_COL: int&lt;br/&gt;+ DUDE_KEY: String&lt;br/&gt;+ DUDE_ANIMATION_PERIOD: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ nextPosition(WorldModel, Point): Point&lt;br/&gt;+ executeActivity(WorldModel, ImageStore, EventScheduler): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1"><mxGeometry x="3578" y="1228" width="433" height="277" as="geometry"/></mxCell><mxCell id="node3" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;DudeFullEntity&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ DudeFullEntity(String, Point, List&amp;lt;PImage&amp;gt;, int, int, int, int, int, int): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ transform(WorldModel, EventScheduler, ImageStore): void&lt;br/&gt;+ executeActivity(WorldModel, ImageStore, EventScheduler): void&lt;br/&gt;+ moveTo(WorldModel, Entity, EventScheduler): boolean&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1"><mxGeometry x="4072" y="1237" width="433" height="131" as="geometry"/></mxCell><mxCell id="node21" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;DudeNotFullEntity&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ DudeNotFullEntity(String, Point, List&amp;lt;PImage&amp;gt;, int, int, int, int, int, int): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ moveTo(WorldModel, Entity, EventScheduler): boolean&lt;br/&gt;+ executeActivity(WorldModel, ImageStore, EventScheduler): void&lt;br/&gt;+ transform(WorldModel, EventScheduler, ImageStore): boolean&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1"><mxGeometry x="2186" y="1615" width="433" height="155" as="geometry"/></mxCell><mxCell id="node5" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Entity&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Entity(String, Point, List&amp;lt;PImage&amp;gt;, int, int): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- images: List&amp;lt;PImage&amp;gt;&lt;br/&gt;- imageIndex: int&lt;br/&gt;- id: String&lt;br/&gt;- position: Point&lt;br/&gt;# health: int&lt;br/&gt;- animationPeriod: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getImageIndex(): int&lt;br/&gt;+ getAnimationPeriod(): int&lt;br/&gt;+ createSapling(String, Point, List&amp;lt;PImage&amp;gt;): Entity&lt;br/&gt;+ getEntityKind(): Class&lt;br/&gt;+ createFairy(String, Point, int, int, List&amp;lt;PImage&amp;gt;): Entity&lt;br/&gt;+ createObstacle(String, Point, List&amp;lt;PImage&amp;gt;): Entity&lt;br/&gt;+ getPosition(): Point&lt;br/&gt;# getNumFromRange(int, int): int&lt;br/&gt;+ createDudeFull(String, Point, int, int, int, List&amp;lt;PImage&amp;gt;): Entity&lt;br/&gt;+ createHouse(String, Point, List&amp;lt;PImage&amp;gt;): Entity&lt;br/&gt;+ createStump(String, Point, List&amp;lt;PImage&amp;gt;): Entity&lt;br/&gt;+ getHealth(): int&lt;br/&gt;+ nextImage(): void&lt;br/&gt;+ createDudeNotFull(String, Point, int, int, int, List&amp;lt;PImage&amp;gt;): Entity&lt;br/&gt;+ createAnimationAction(int): Action&lt;br/&gt;+ createTree(String, Point, int, int, int, List&amp;lt;PImage&amp;gt;): Entity&lt;br/&gt;+ getImages(): List&amp;lt;PImage&amp;gt;&lt;br/&gt;+ setImageIndex(int): void&lt;br/&gt;+ createActivityAction(WorldModel, ImageStore): Action&lt;br/&gt;+ getId(): String&lt;br/&gt;+ getCurrentImage(): PImage&lt;br/&gt;+ setPosition(Point): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1"><mxGeometry x="2815" y="429" width="437" height="673" as="geometry"/></mxCell><mxCell id="node14" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Event&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Event(Action, long, Entity): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- time: long&lt;br/&gt;- entity: Entity&lt;br/&gt;- action: Action&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getAction(): Action&lt;br/&gt;+ getTime(): long&lt;br/&gt;+ getEntity(): Entity&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1"><mxGeometry x="3312" y="979" width="211" height="189" as="geometry"/></mxCell><mxCell id="node6" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;EventComparator&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ EventComparator(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ compare(Event, Event): int&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1"><mxGeometry x="332" y="1355" width="207" height="83" as="geometry"/></mxCell><mxCell id="node4" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;EventScheduler&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ EventScheduler(double): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- eventQueue: PriorityQueue&amp;lt;Event&amp;gt;&lt;br/&gt;- pendingEvents: Map&amp;lt;Entity, List&amp;lt;Event&amp;gt;&amp;gt;&lt;br/&gt;- timeScale: double&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ updateOnTime(long): void&lt;br/&gt;+ getPendingEvents(): Map&amp;lt;Entity, List&amp;lt;Event&amp;gt;&amp;gt;&lt;br/&gt;+ scheduleEvent(Entity, Action, long): void&lt;br/&gt;+ unscheduleAllEvents(Entity): void&lt;br/&gt;+ getTimeScale(): double&lt;br/&gt;- removePendingEvent(Event): void&lt;br/&gt;+ getEventQueue(): PriorityQueue&amp;lt;Event&amp;gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1"><mxGeometry x="1979" y="1081" width="331" height="319" as="geometry"/></mxCell><mxCell id="node13" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;FairyDudePos&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ FairyDudePos(String, Point, List&amp;lt;PImage&amp;gt;, int, int, int, int, int, int): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ moveTo(WorldModel, Entity, EventScheduler): boolean&lt;br/&gt;+ nextPosition(WorldModel, Point): Point&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1"><mxGeometry x="3593" y="1034" width="377" height="107" as="geometry"/></mxCell><mxCell id="node17" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;FairyEntity&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ FairyEntity(String, Point, List&amp;lt;PImage&amp;gt;, int, int, int, int, int, int): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ FAIRY_COL: int&lt;br/&gt;+ FAIRY_NUM_PROPERTIES: int&lt;br/&gt;+ FAIRY_ANIMATION_PERIOD: int&lt;br/&gt;+ FAIRY_ID: int&lt;br/&gt;+ FAIRY_KEY: String&lt;br/&gt;+ FAIRY_ACTION_PERIOD: int&lt;br/&gt;+ FAIRY_ROW: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ executeActivity(WorldModel, ImageStore, EventScheduler): void&lt;br/&gt;+ moveTo(WorldModel, Entity, EventScheduler): boolean&lt;br/&gt;+ nextPosition(WorldModel, Point): Point&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1"><mxGeometry x="4326" y="503" width="433" height="277" as="geometry"/></mxCell><mxCell id="node16" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Functions&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Functions(): &lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1"><mxGeometry x="1270" y="1097" width="124" height="57" as="geometry"/></mxCell><mxCell id="node23" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;HouseEntity&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ HouseEntity(String, Point, List&amp;lt;PImage&amp;gt;): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ HOUSE_NUM_PROPERTIES: int&lt;br/&gt;+ HOUSE_ID: int&lt;br/&gt;+ HOUSE_ROW: int&lt;br/&gt;+ HOUSE_KEY: String&lt;br/&gt;+ HOUSE_COL: int&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1"><mxGeometry x="4063" y="964" width="302" height="165" as="geometry"/></mxCell><mxCell id="node25" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ImageStore&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ImageStore(PImage): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- defaultImages: List&amp;lt;PImage&amp;gt;&lt;br/&gt;- COLOR_MASK: int&lt;br/&gt;- KEYED_GREEN_IDX: int&lt;br/&gt;- KEYED_BLUE_IDX: int&lt;br/&gt;- KEYED_RED_IDX: int&lt;br/&gt;- images: Map&amp;lt;String, List&amp;lt;PImage&amp;gt;&amp;gt;&lt;br/&gt;- KEYED_IMAGE_MIN: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- setAlpha(PImage, int, int): void&lt;br/&gt;+ getImages(): Map&amp;lt;String, List&amp;lt;PImage&amp;gt;&amp;gt;&lt;br/&gt;+ getDefaultImages(): List&amp;lt;PImage&amp;gt;&lt;br/&gt;+ getImageList(String): List&amp;lt;PImage&amp;gt;&lt;br/&gt;+ getImages(Map&amp;lt;String, List&amp;lt;PImage&amp;gt;&amp;gt;, String): List&amp;lt;PImage&amp;gt;&lt;br/&gt;- processImageLine(String, PApplet): void&lt;br/&gt;+ loadImages(Scanner, PApplet): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1"><mxGeometry x="4565" y="840" width="426" height="365" as="geometry"/></mxCell><mxCell id="node22" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ObstacleEntity&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ObstacleEntity(String, Point, List&amp;lt;PImage&amp;gt;, int): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ OBSTACLE_ROW: int&lt;br/&gt;+ OBSTACLE_ID: int&lt;br/&gt;+ OBSTACLE_ANIMATION_PERIOD: int&lt;br/&gt;+ OBSTACLE_NUM_PROPERTIES: int&lt;br/&gt;+ OBSTACLE_COL: int&lt;br/&gt;+ OBSTACLE_KEY: String&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ scheduleActions(EventScheduler, WorldModel, ImageStore): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1"><mxGeometry x="3528" y="708" width="441" height="211" as="geometry"/></mxCell><mxCell id="node10" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;PlantEntity&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ PlantEntity(String, Point, List&amp;lt;PImage&amp;gt;, int, int, int, int, int, int): &lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1"><mxGeometry x="407" y="1049" width="367" height="57" as="geometry"/></mxCell><mxCell id="node19" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Point&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Point(int, int): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- x: int&lt;br/&gt;- y: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getX(): int&lt;br/&gt;+ equals(Object): boolean&lt;br/&gt;+ toString(): String&lt;br/&gt;+ hashCode(): int&lt;br/&gt;+ getY(): int&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1"><mxGeometry x="80" y="1083" width="192" height="211" as="geometry"/></mxCell><mxCell id="node20" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;SaplingEntity&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ SaplingEntity(String, Point, List&amp;lt;PImage&amp;gt;, int, int, int, int, int, int): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ SAPLING_ACTION_ANIMATION_PERIOD: int&lt;br/&gt;+ SAPLING_KEY: String&lt;br/&gt;+ SAPLING_NUM_PROPERTIES: int&lt;br/&gt;+ SAPLING_HEALTH: int&lt;br/&gt;+ SAPLING_ROW: int&lt;br/&gt;+ SAPLING_ID: int&lt;br/&gt;+ SAPLING_HEALTH_LIMIT: int&lt;br/&gt;+ SAPLING_COL: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ scheduleActions(EventScheduler, WorldModel, ImageStore): void&lt;br/&gt;+ transform(WorldModel, EventScheduler, ImageStore): boolean&lt;br/&gt;+ executeActivity(WorldModel, ImageStore, EventScheduler): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1"><mxGeometry x="1466" y="861" width="441" height="299" as="geometry"/></mxCell><mxCell id="node2" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;StumpEntity&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ StumpEntity(String, Point, List&amp;lt;PImage&amp;gt;): &lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1"><mxGeometry x="3145" y="1291" width="303" height="57" as="geometry"/></mxCell><mxCell id="node15" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;Transform&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ transform(WorldModel, EventScheduler, ImageStore): boolean&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1"><mxGeometry x="1920" y="1488" width="422" height="92" as="geometry"/></mxCell><mxCell id="node1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;TreeEntity&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ TreeEntity(String, Point, List&amp;lt;PImage&amp;gt;, int, int, int, int, int, int): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ TREE_HEALTH_MAX: int&lt;br/&gt;+ TREE_COL: int&lt;br/&gt;+ TREE_ID: int&lt;br/&gt;+ TREE_HEALTH: int&lt;br/&gt;+ STUMP_KEY: String&lt;br/&gt;+ TREE_ACTION_MIN: int&lt;br/&gt;+ TREE_HEALTH_MIN: int&lt;br/&gt;+ TREE_NUM_PROPERTIES: int&lt;br/&gt;+ TREE_ACTION_MAX: int&lt;br/&gt;+ TREE_ANIMATION_MIN: int&lt;br/&gt;+ TREE_ACTION_PERIOD: int&lt;br/&gt;+ TREE_KEY: String&lt;br/&gt;+ TREE_ROW: int&lt;br/&gt;+ TREE_ANIMATION_PERIOD: int&lt;br/&gt;+ TREE_ANIMATION_MAX: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ scheduleActions(EventScheduler, WorldModel, ImageStore): void&lt;br/&gt;+ executeActivity(WorldModel, ImageStore, EventScheduler): void&lt;br/&gt;+ transform(WorldModel, EventScheduler, ImageStore): boolean&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1"><mxGeometry x="680" y="1175" width="441" height="453" as="geometry"/></mxCell><mxCell id="node24" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Viewport&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Viewport(int, int): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- row: int&lt;br/&gt;- col: int&lt;br/&gt;- numRows: int&lt;br/&gt;- numCols: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ setRow(int): void&lt;br/&gt;+ shift(int, int): void&lt;br/&gt;+ getCol(): int&lt;br/&gt;+ worldToViewport(int, int): Point&lt;br/&gt;+ setCol(int): void&lt;br/&gt;+ getRow(): int&lt;br/&gt;+ getNumRows(): int&lt;br/&gt;+ contains(Point): boolean&lt;br/&gt;+ getNumCols(): int&lt;br/&gt;+ viewportToWorld(int, int): Point&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1"><mxGeometry x="2825" y="1166" width="233" height="365" as="geometry"/></mxCell><mxCell id="node7" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;VirtualWorld&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ VirtualWorld(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- timeScale: double&lt;br/&gt;+ DEFAULT_IMAGE_COLOR: int&lt;br/&gt;+ FASTEST_SCALE: double&lt;br/&gt;+ VIEW_ROWS: int&lt;br/&gt;- view: WorldView&lt;br/&gt;+ FAST_FLAG: String&lt;br/&gt;- world: WorldModel&lt;br/&gt;+ FASTER_FLAG: String&lt;br/&gt;- nextTime: long&lt;br/&gt;+ DEFAULT_IMAGE_NAME: String&lt;br/&gt;- LOAD_FILE_NAME: String&lt;br/&gt;+ WORLD_COLS: int&lt;br/&gt;+ VIEW_HEIGHT: int&lt;br/&gt;+ WORLD_HEIGHT_SCALE: int&lt;br/&gt;- scheduler: EventScheduler&lt;br/&gt;+ FAST_SCALE: double&lt;br/&gt;+ TILE_WIDTH: int&lt;br/&gt;+ WORLD_WIDTH_SCALE: int&lt;br/&gt;+ VIEW_WIDTH: int&lt;br/&gt;- imageStore: ImageStore&lt;br/&gt;+ FASTER_SCALE: double&lt;br/&gt;+ FASTEST_FLAG: String&lt;br/&gt;+ PROPERTY_KEY: int&lt;br/&gt;+ IMAGE_LIST_FILE_NAME: String&lt;br/&gt;+ TIMER_ACTION_PERIOD: int&lt;br/&gt;+ VIEW_COLS: int&lt;br/&gt;+ TILE_HEIGHT: int&lt;br/&gt;+ WORLD_ROWS: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ loadWorld(WorldModel, String, ImageStore): void&lt;br/&gt;- mouseToPoint(int, int): Point&lt;br/&gt;+ draw(): void&lt;br/&gt;+ parseCommandLine(String[]): void&lt;br/&gt;- load(Scanner, WorldModel, ImageStore): void&lt;br/&gt;+ keyPressed(): void&lt;br/&gt;+ scheduleActions(WorldModel, EventScheduler, ImageStore): void&lt;br/&gt;+ createDefaultBackground(ImageStore): Background&lt;br/&gt;+ settings(): void&lt;br/&gt;+ mousePressed(): void&lt;br/&gt;~ loadImages(String, ImageStore, PApplet): void&lt;br/&gt;- processLine(String, WorldModel, ImageStore): boolean&lt;br/&gt;+ setup(): void&lt;br/&gt;+ main(String[]): void&lt;br/&gt;+ createImageColored(int, int, int): PImage&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1"><mxGeometry x="-91" y="-14" width="441" height="1003" as="geometry"/></mxCell><mxCell id="node8" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;WorldModel&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ WorldModel(int, int, Background): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- numRows: int&lt;br/&gt;- background: Background[][]&lt;br/&gt;- occupancy: Entity[][]&lt;br/&gt;- entities: Set&amp;lt;Entity&amp;gt;&lt;br/&gt;- numCols: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- distanceSquared(Point, Point): int&lt;br/&gt;+ getOccupancyCell(Point): Entity&lt;br/&gt;+ getBackground(): Background[][]&lt;br/&gt;+ parseHouse(String[], ImageStore): boolean&lt;br/&gt;+ removeEntity(Entity): void&lt;br/&gt;+ parseSapling(String[], ImageStore): boolean&lt;br/&gt;+ parseTree(String[], ImageStore): boolean&lt;br/&gt;+ getEntities(): Set&amp;lt;Entity&amp;gt;&lt;br/&gt;+ findNearest(Point, List&amp;lt;Class&amp;gt;): Optional&amp;lt;Entity&amp;gt;&lt;br/&gt;+ isOccupied(Point): boolean&lt;br/&gt;+ getOccupant(Point): Optional&amp;lt;Entity&amp;gt;&lt;br/&gt;+ nearestEntity(List&amp;lt;Entity&amp;gt;, Point): Optional&amp;lt;Entity&amp;gt;&lt;br/&gt;+ parseDude(String[], ImageStore): boolean&lt;br/&gt;+ setBackground(Point, Background): void&lt;br/&gt;+ setOccupancyCell(Point, Entity): void&lt;br/&gt;+ parseFairy(String[], ImageStore): boolean&lt;br/&gt;+ getBackgroundImage(Point): Optional&amp;lt;PImage&amp;gt;&lt;br/&gt;+ parseObstacle(String[], ImageStore): boolean&lt;br/&gt;+ parseBackground(String[], ImageStore): boolean&lt;br/&gt;+ moveEntity(Entity, Point): void&lt;br/&gt;+ addEntity(Entity): void&lt;br/&gt;+ withinBounds(Point): boolean&lt;br/&gt;+ adjacent(Point, Point): boolean&lt;br/&gt;+ getNumRows(): int&lt;br/&gt;+ getoccupancy(): Entity[][]&lt;br/&gt;+ getNumCols(): int&lt;br/&gt;- removeEntityAt(Point): void&lt;br/&gt;+ tryAddEntity(Entity): void&lt;br/&gt;+ getBackgroundCell(Point): Background&lt;br/&gt;- setBackgroundCell(Point, Background): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1"><mxGeometry x="452" y="46" width="358" height="827" as="geometry"/></mxCell><mxCell id="node12" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;WorldView&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ WorldView(int, int, PApplet, WorldModel, int, int): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- viewport: Viewport&lt;br/&gt;- tileHeight: int&lt;br/&gt;- screen: PApplet&lt;br/&gt;- tileWidth: int&lt;br/&gt;- world: WorldModel&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getWorld(): WorldModel&lt;br/&gt;+ getScreen(): PApplet&lt;br/&gt;+ getTileHeight(): int&lt;br/&gt;+ getViewport(): Viewport&lt;br/&gt;+ drawViewport(): void&lt;br/&gt;+ shiftView(int, int): void&lt;br/&gt;+ drawEntities(): void&lt;br/&gt;- clamp(int, int, int): int&lt;br/&gt;+ getTileWidth(): int&lt;br/&gt;+ drawBackground(): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1"><mxGeometry x="2680" y="1594" width="340" height="436" as="geometry"/></mxCell><mxCell id="edge11" value="" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=0.500;exitY=0.000;exitDx=0;exitDy=0;entryX=0.500;entryY=0.000;entryDx=0;entryDy=0;" parent="1" source="node9" target="node18" edge="1"><mxGeometry width="50" height="50" relative="1" as="geometry"><Array as="points"><mxPoint x="1705" y="1208"/><mxPoint x="1318" y="1208"/></Array></mxGeometry></mxCell><mxCell id="edge7" value="" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=0.826;exitY=1.000;exitDx=0;exitDy=0;entryX=0.500;entryY=0.000;entryDx=0;entryDy=0;" parent="1" source="node0" target="node18" edge="1"><mxGeometry width="50" height="50" relative="1" as="geometry"><Array as="points"><mxPoint x="1145" y="1208"/><mxPoint x="1318" y="1208"/></Array></mxGeometry></mxCell><mxCell id="edge6" value="" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=1.000;exitY=0.194;exitDx=0;exitDy=0;entryX=1.000;entryY=0.500;entryDx=0;entryDy=0;" parent="1" source="node27" target="node13" edge="1"><mxGeometry width="50" height="50" relative="1" as="geometry"><Array as="points"><mxPoint x="4042" y="1282"/><mxPoint x="4042" y="1175"/><mxPoint x="4006" y="1175"/><mxPoint x="4006" y="1084"/></Array></mxGeometry></mxCell><mxCell id="edge8" value="" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=0.000;exitY=0.500;exitDx=0;exitDy=0;entryX=1.000;entryY=0.500;entryDx=0;entryDy=0;" parent="1" source="node3" target="node27" edge="1"><mxGeometry width="50" height="50" relative="1" as="geometry"><Array as="points"><mxPoint x="4042" y="1297"/><mxPoint x="4042" y="1367"/></Array></mxGeometry></mxCell><mxCell id="edge12" value="" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=0.500;exitY=1.000;exitDx=0;exitDy=0;entryX=1.000;entryY=0.500;entryDx=0;entryDy=0;" parent="1" source="node21" target="node27" edge="1"><mxGeometry width="50" height="50" relative="1" as="geometry"><Array as="points"><mxPoint x="2403" y="1999"/><mxPoint x="4079" y="1999"/><mxPoint x="4079" y="1482"/><mxPoint x="4042" y="1482"/><mxPoint x="4042" y="1367"/></Array></mxGeometry></mxCell><mxCell id="edge10" value="" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=0.447;exitY=0.000;exitDx=0;exitDy=0;entryX=0.500;entryY=0.001;entryDx=0;entryDy=0;" parent="1" source="node21" target="node15" edge="1"><mxGeometry width="50" height="50" relative="1" as="geometry"><Array as="points"><mxPoint x="2380" y="1455"/><mxPoint x="2131" y="1455"/></Array></mxGeometry></mxCell><mxCell id="edge5" value="" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=0.500;exitY=1.000;exitDx=0;exitDy=0;entryX=0.000;entryY=0.500;entryDx=0;entryDy=0;" parent="1" source="node13" target="node11" edge="1"><mxGeometry width="50" height="50" relative="1" as="geometry"><Array as="points"><mxPoint x="3782" y="1185"/><mxPoint x="3075" y="1185"/><mxPoint x="3075" y="1568"/><mxPoint x="3042" y="1568"/><mxPoint x="3042" y="1671"/></Array></mxGeometry></mxCell><mxCell id="edge4" value="" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=0.000;exitY=0.500;exitDx=0;exitDy=0;entryX=1.000;entryY=0.500;entryDx=0;entryDy=0;" parent="1" source="node17" target="node13" edge="1"><mxGeometry width="50" height="50" relative="1" as="geometry"><Array as="points"><mxPoint x="4006" y="641"/><mxPoint x="4006" y="1084"/></Array></mxGeometry></mxCell><mxCell id="edge2" value="" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=0.500;exitY=1.000;exitDx=0;exitDy=0;entryX=1.000;entryY=0.754;entryDx=0;entryDy=0;" parent="1" source="node23" target="node5" edge="1"><mxGeometry width="50" height="50" relative="1" as="geometry"><Array as="points"><mxPoint x="4214" y="1160"/><mxPoint x="3576" y="1160"/><mxPoint x="3576" y="936"/></Array></mxGeometry></mxCell><mxCell id="edge3" value="" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=0.459;exitY=1.000;exitDx=0;exitDy=0;entryX=0.000;entryY=0.500;entryDx=0;entryDy=0;" parent="1" source="node10" target="node11" edge="1"><mxGeometry width="50" height="50" relative="1" as="geometry"><Array as="points"><mxPoint x="575" y="1753"/><mxPoint x="2120" y="1753"/><mxPoint x="2120" y="1568"/><mxPoint x="3042" y="1568"/><mxPoint x="3042" y="1671"/></Array></mxGeometry></mxCell><mxCell id="edge0" value="" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=0.000;exitY=0.500;exitDx=0;exitDy=0;entryX=0.500;entryY=1.000;entryDx=0;entryDy=0;" parent="1" source="node20" target="node10" edge="1"><mxGeometry width="50" height="50" relative="1" as="geometry"><Array as="points"><mxPoint x="1227" y="1011"/><mxPoint x="1227" y="1139"/><mxPoint x="590" y="1139"/></Array></mxGeometry></mxCell><mxCell id="edge9" value="" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=0.077;exitY=1.000;exitDx=0;exitDy=0;entryX=0.500;entryY=0.001;entryDx=0;entryDy=0;" parent="1" source="node20" target="node15" edge="1"><mxGeometry width="50" height="50" relative="1" as="geometry"><Array as="points"><mxPoint x="1500" y="1455"/><mxPoint x="2131" y="1455"/></Array></mxGeometry></mxCell><mxCell id="edge1" value="" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=0.496;exitY=0.000;exitDx=0;exitDy=0;entryX=1.000;entryY=0.754;entryDx=0;entryDy=0;" parent="1" source="node2" target="node5" edge="1"><mxGeometry width="50" height="50" relative="1" as="geometry"><Array as="points"><mxPoint x="3295" y="1200"/><mxPoint x="3968" y="1200"/><mxPoint x="3968" y="1160"/><mxPoint x="3576" y="1160"/><mxPoint x="3576" y="936"/></Array></mxGeometry></mxCell><mxCell id="edge13" value="" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=0.500;exitY=0.000;exitDx=0;exitDy=0;entryX=0.500;entryY=1.000;entryDx=0;entryDy=0;" parent="1" source="node1" target="node10" edge="1"><mxGeometry width="50" height="50" relative="1" as="geometry"><Array as="points"><mxPoint x="901" y="1139"/><mxPoint x="590" y="1139"/></Array></mxGeometry></mxCell><mxCell id="edge14" value="" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=1.000;exitY=0.500;exitDx=0;exitDy=0;entryX=0.500;entryY=0.001;entryDx=0;entryDy=0;" parent="1" source="node1" target="node15" edge="1"><mxGeometry width="50" height="50" relative="1" as="geometry"><Array as="points"><mxPoint x="1165" y="1401"/><mxPoint x="1165" y="1455"/><mxPoint x="2131" y="1455"/></Array></mxGeometry></mxCell></root></mxGraphModel></diagram></mxfile>